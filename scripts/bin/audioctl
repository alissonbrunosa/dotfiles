#!/bin/bash

move_sink_inputs() {
    local default=$1

    for input in $(ponymix --short --sink-input list | cut -f 2); do
        ponymix --sink-input -d $input move $default
    done
}


set_default_sink() {
    default=$(
        pa-cli sink list | cut -f 1,3 |
        rg --invert-match Monitor |
        awk '{print $0"\0icon\x1faudio-speakers"}' |
        rofi -dmenu -p 'Sink:' -theme themes/appsmenu.rasi |
        cut -f 1
    )

    [[ -z $default ]] && exit 1

    pa-cli sink set-default $default && move_sink_inputs $default
}

move_source_outputs() {
    local default=$1

    for output in $(ponymix --short --source-output list | cut -f 2); do
        ponymix --source-output -d $output move $default
    done
}


set_default_source() {
    default=$(
        pa-cli source list | cut -f 1,3 |
        rg --invert-match Monitor |
        awk '{print $0"\0icon\x1faudio-input-microphone"}' |
        rofi -dmenu -p 'Source:' -theme themes/appsmenu.rasi -show-icons |
        cut -f 1
    )

    [[ -z $default ]] && exit 1

    pa-cli source set-default $default && move_source_outputs $default
}

process_default() {
  local option=$1

  case "$option" in
      sink)
          set_default_sink
      ;;
      source)
          set_default_source
      ;;
      *)
          echo "Unkown option: $option"
          echo "Knwon options are: sink and source"
          exit 1
  esac
}

control_device() {
  local device_type=$1
  local option=$2

  case "$option" in
      plus)
          pa-cli $device_type adjust-volume 5
      ;;
      minus)
          pa-cli $device_type adjust-volume -5
      ;;
      mute)
          pa-cli $device_type mute
      ;;
      *)
          echo "Unkown option: $option"
          echo "Knwon options are: plus, minus or mute"
          exit 1
  esac
}

action=$1
option=$2
case "$action" in
    set-default)
        process_default $option
        ;;
    speakers)
        control_device sink $option
        ;;
    mic)
        control_device source $option
        ;;
esac
